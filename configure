#!/bin/sh

echo 'configuring spnavcfg...'

PREFIX=/usr/local
OPT=yes
DBG=yes
X11=yes

for arg; do
	case "$arg" in
	--prefix=*)
		value=`echo $arg | sed 's/--prefix=//'`
		PREFIX=${value:-$prefix}
		;;
	
	--enable-opt)
		OPT=yes;;
	--disable-opt)
		OPT=no;;

	--enable-debug)
		DBG=yes;;
	--disable-debug)
		DBG=no;;

	--help)
		echo 'usage: ./configure [options]'
		echo 'options:'
		echo '  --prefix=<path>: installation path (default: /usr/local)'
		echo '  --enable-opt: enable speed optimizations (default)'
		echo '  --disable-opt: disable speed optimizations'
		echo '  --enable-debug: include debugging symbols (default)'
		echo '  --disable-debug: do not include debugging symbols'
		echo 'all invalid options are silently ignored'
		exit 0
		;;
	esac
done


detect_qt()
{
	qt6libs='Qt6Core Qt6Gui Qt6Widgets'
	qt5libs='Qt5Core Qt5Gui Qt5Widgets'

	printf 'Detecting Qt libraries ... '

	if pkg-config --cflags $qt6libs >/dev/null 2>&1; then
		echo 'found Qt6'
		qt_cflags=`pkg-config --cflags $qt6libs`
		qt_libs=`pkg-config --libs $qt6libs`
		cxxstd='-std=c++17'
	elif pkg-config --cflags $qt5libs >/dev/null 2>&1; then
		echo 'found Qt5'
		qt_cflags=`pkg-config --cflags $qt5libs`
		qt_libs=`pkg-config --libs $qt5libs`
		cxxstd='-std=c++11'
	else
		echo 'failed to find Qt5 or Qt6' >&2
		exit 1
	fi
}

detect_qt

echo
echo "  prefix: $PREFIX"
echo "  optimize for speed: $OPT"
echo "  include debugging symbols: $DBG"
echo

# create Makefile
echo 'creating Makefile ...'
echo "PREFIX = $PREFIX" >Makefile

if [ "$DBG" = 'yes' ]; then
	echo 'dbg = -g' >>Makefile
fi

if [ "$OPT" = 'yes' ]; then
	echo 'opt = -O3' >>Makefile
fi

echo "qt_cflags = $qt_cflags" >>Makefile
echo "qt_libs = $qt_libs" >>Makefile
echo "cxxstd = $cxxstd" >>Makefile

if [ -n "$CFLAGS" ]; then
	echo "add_cflags = $CFLAGS" >>Makefile
fi
if [ -n "$LDFLAGS" ]; then
	echo "add_ldflags = $LDFLAGS" >>Makefile
fi

cat "Makefile.in" >>Makefile

echo ''
echo 'Done. You can now type make (or gmake) to compile spnavcfg.'
echo ''
